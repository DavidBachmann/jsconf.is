@import "_animate";
@import "_open";

.Page {
  $distance: 20px;
  $time: 250ms;

  display: block;
  height: 24vh;
  min-height: 115px;
  position: relative;
  overflow: hidden;

  @include breakpoint(medium) {
    height: (100vh / 3);
    min-height: 0;
    width: 50%;
  }

  @include breakpoint(large) {
    height: 50vh;
    width: (100% / 3);
  }

  &-wrap {
    background: $color-jsconf-yellow;
    color: $color-gray-75;
    overflow: hidden;
    left: 0;
    position: relative;
    top: 0;
    width: 100%;
    z-index: 0;
  }

  &s {
    display: flex;
    flex: 0 1;
    flex-wrap: wrap;
    flex-direction: column;

    @include breakpoint(medium) {
      height: 100vh;
    }

    @include breakpoint(large) {
      flex-direction: row;
    }
  }

  &-header {
    height: 24vh;
    cursor: pointer;
    min-height: 115px;
    padding: 0;
    width: 100%;

    @include breakpoint(medium) {
      height: (100vh/3);
    }

    @include breakpoint(large) {
      height: 50vh;
    }
  }

  &-headerData {
    align-items: center;
    height: 100%;
    display: flex;
    transition: transform .3s;

    @include breakpoint(medium) {
      flex-direction: column;
      justify-content: center;
    }
  }

  &:hover &-headerData {
    @include breakpoint(medium) {
      transform: scale(1.1);
    }
  }

  &.is-open &-headerData {
    transform: none;
  }

  &-footer {
    visibility: hidden;
  }

  &-content {
    box-sizing: border-box;
    visibility: hidden;
    opacity: 0;
    width: 100vw;
    min-height: 100vh;

    a {
      @extend .BgLink;
    }

    figure {
      font-size: .7em;
      text-align: right;
      margin-left: 0;
      margin-right: 0;

      img,
      > a {
        width: 100%;
      }

      a {
        color: $color-jsconf-purple;
      }

      a:hover {
        color: $color-jsconf-purple;
        text-decoration: underline;
      }

      a::before {
        content: none;
      }
    }
  }

  &-siteTitle {
    font-size: rem-calc(18);
    right: 100%;
    line-height: 1em;
    margin-top: -2px;
    opacity: 0;
    position: absolute;
    top: $global-margin;
    white-space: nowrap;

    @include breakpoint(medium) {
      top: $global-margin * 2;
    }
  }

  &-close {
    visibility: hidden;
    position: absolute;
    left: 100%;
    top: $global-margin;
    opacity: 0;

    width: 30px;
    height: 30px;

    font-size: 0;

    @include breakpoint(medium) {
      top: $global-margin * 2;
    }

    &:before,
    &:after {
      content: '';

      position: absolute;
      top: 0; left: 0; right: 0; bottom: 0;

      margin: auto;
      display: block;
      width: 30px;
      height: 3px;

      background: $color-gray-75;

      border-radius: 100%;

      opacity: 0;
      transform: translate3d(0,0,0) rotate(0deg);
      transform-origin: center center;

      transition: transform 750ms, opacity 500ms;
    }
  }

  &-icon {
    display: inline-block;
    margin: 0 $global-margin;
    z-index: -1;

    @media (max-width: (map_get($breakpoints, large) - 1)) {
      width: 70px;

      > .Svg {
        height: 100%;
        width: auto;
        max-width: 100%;
      }
    }
  }

  &-title {
    display: inline-block;
    font-size: rem-calc(20);
    left: 0;
    margin: 0;
    white-space: nowrap;
    vertical-align: middle;

    @include breakpoint(medium) {
      margin-top: 1rem;
    }
  }

  &-blurb {
    background: $color-jsconf-purple;
    color: #fff;
    left: 0;
    padding: 2px;
    position: absolute;
    right: 0;
    text-align: center;
    top: 100%;
    transition: opacity .3s, transform .3s;
    z-index: 2;
  }

  &:hover &-blurb {
    transform: translate(0, -100%);
  }

  /* State */
  @at-root  {
    .no-scroll {
      overflow: hidden;
    }
  }

  &.is-open {
    @extend %is-open;
  }

  &.is-animating {
    @extend %is-animating;
  }

  /* Modifiers */
  &:nth-child(2n+2) &-wrap {
    background: $color-gray-75;
    color: $white;

    a::before {
      background: $color-jsconf-purple;
    }

    .Page-header {
      color: $color-jsconf-yellow;
    }
    .Page-close {
      &:before, &:after {
        background-color: $color-jsconf-yellow;
      }
    }
  }
}
